// Generated by view binder compiler. Do not edit!
package santiago.avila.carritocompra.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import santiago.avila.carritocompra.R;

public final class ItemRvProductosBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CheckBox cbCarro;

  @NonNull
  public final TextView tvDescripcion;

  @NonNull
  public final TextView tvNomProducto;

  @NonNull
  public final TextView tvPrecio;

  private ItemRvProductosBinding(@NonNull ConstraintLayout rootView, @NonNull CheckBox cbCarro,
      @NonNull TextView tvDescripcion, @NonNull TextView tvNomProducto,
      @NonNull TextView tvPrecio) {
    this.rootView = rootView;
    this.cbCarro = cbCarro;
    this.tvDescripcion = tvDescripcion;
    this.tvNomProducto = tvNomProducto;
    this.tvPrecio = tvPrecio;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemRvProductosBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemRvProductosBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_rv_productos, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemRvProductosBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cbCarro;
      CheckBox cbCarro = ViewBindings.findChildViewById(rootView, id);
      if (cbCarro == null) {
        break missingId;
      }

      id = R.id.tvDescripcion;
      TextView tvDescripcion = ViewBindings.findChildViewById(rootView, id);
      if (tvDescripcion == null) {
        break missingId;
      }

      id = R.id.tvNomProducto;
      TextView tvNomProducto = ViewBindings.findChildViewById(rootView, id);
      if (tvNomProducto == null) {
        break missingId;
      }

      id = R.id.tvPrecio;
      TextView tvPrecio = ViewBindings.findChildViewById(rootView, id);
      if (tvPrecio == null) {
        break missingId;
      }

      return new ItemRvProductosBinding((ConstraintLayout) rootView, cbCarro, tvDescripcion,
          tvNomProducto, tvPrecio);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
